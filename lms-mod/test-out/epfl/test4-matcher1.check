match
match
match
no match
match
match
match
no match
TP(Sym(3),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(2)))
TP(Sym(4),First(Sym(3)))
TP(Sym(5),Second(Sym(3)))
TP(Sym(6),Test(Sym(4),A))
TP(Sym(9),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(8)))
TP(Sym(10),First(Sym(9)))
TP(Sym(11),Second(Sym(9)))
TP(Sym(12),Test(Sym(10),A))
TP(Sym(15),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(14)))
TP(Sym(16),First(Sym(15)))
TP(Sym(17),Second(Sym(15)))
TP(Sym(18),Test(Sym(16),B))
TP(Sym(19),Reify(Const(true),List(Sym(15), Sym(18))))
TP(Sym(13),DefineFun(Block(Sym(19))))
TP(Sym(20),Lambda(<function1>))
TP(Sym(21),Apply(Sym(13),Sym(11)))
TP(Sym(24),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(23)))
TP(Sym(25),First(Sym(24)))
TP(Sym(26),Second(Sym(24)))
TP(Sym(29),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(28)))
TP(Sym(30),First(Sym(29)))
TP(Sym(31),Second(Sym(29)))
TP(Sym(34),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(33)))
TP(Sym(35),First(Sym(34)))
TP(Sym(36),Second(Sym(34)))
TP(Sym(37),Test(Sym(35),A))
TP(Sym(40),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(39)))
TP(Sym(41),First(Sym(40)))
TP(Sym(42),Second(Sym(40)))
TP(Sym(43),Test(Sym(41),A))
TP(Sym(46),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(45)))
TP(Sym(47),First(Sym(46)))
TP(Sym(48),Second(Sym(46)))
TP(Sym(49),Test(Sym(47),B))
TP(Sym(50),Reify(Const(true),List(Sym(46), Sym(49))))
TP(Sym(44),DefineFun(Block(Sym(50))))
TP(Sym(51),Lambda(<function1>))
TP(Sym(52),Apply(Sym(44),Sym(42)))
TP(Sym(55),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(54)))
TP(Sym(56),First(Sym(55)))
TP(Sym(57),Second(Sym(55)))
TP(Sym(58),Lambda(<function1>))
TP(Sym(59),Apply(Sym(27),Sym(31)))
TP(Sym(60),DefineFun(Block(Pure(Const(false)))))
TP(Sym(62),Lambda(<function1>))
TP(Sym(63),Apply(Sym(60),Sym(31)))
TP(Sym(64),OrElse(List(Sym(59), Sym(63))))
TP(Sym(65),Reify(Sym(64),List(Sym(55))))
TP(Sym(53),DefineFun(Block(Sym(65))))
TP(Sym(66),Lambda(<function1>))
TP(Sym(67),Apply(Sym(53),Sym(42)))
TP(Sym(68),DefineFun(Block(Pure(Const(false)))))
TP(Sym(70),Lambda(<function1>))
TP(Sym(71),Apply(Sym(68),Sym(42)))
TP(Sym(72),OrElse(List(Sym(52), Sym(67), Sym(71))))
TP(Sym(73),Reify(Sym(72),List(Sym(40), Sym(43))))
TP(Sym(38),DefineFun(Block(Sym(73))))
TP(Sym(74),Lambda(<function1>))
TP(Sym(75),Apply(Sym(38),Sym(36)))
TP(Sym(76),Apply(Sym(53),Sym(36)))
TP(Sym(77),Apply(Sym(68),Sym(36)))
TP(Sym(78),OrElse(List(Sym(75), Sym(76), Sym(77))))
TP(Sym(79),Reify(Sym(78),List(Sym(34), Sym(37))))
TP(Sym(32),DefineFun(Block(Sym(79))))
TP(Sym(80),Lambda(<function1>))
TP(Sym(81),Apply(Sym(32),Sym(31)))
TP(Sym(82),Apply(Sym(53),Sym(31)))
TP(Sym(83),Apply(Sym(68),Sym(31)))
TP(Sym(84),OrElse(List(Sym(81), Sym(82), Sym(83))))
TP(Sym(85),Reify(Sym(84),List(Sym(29))))
TP(Sym(27),DefineFun(Block(Sym(85))))
TP(Sym(86),Apply(Sym(27),Sym(0)))
TP(Sym(87),Apply(Sym(60),Sym(0)))
TP(Sym(88),OrElse(List(Sym(86), Sym(87))))
TP(Sym(89),Reify(Sym(88),List(Sym(24))))
TP(Sym(22),DefineFun(Block(Sym(89))))
TP(Sym(90),Lambda(<function1>))
TP(Sym(91),Apply(Sym(22),Sym(11)))
TP(Sym(92),Apply(Sym(68),Sym(11)))
TP(Sym(93),OrElse(List(Sym(21), Sym(91), Sym(92))))
TP(Sym(94),Reify(Sym(93),List(Sym(9), Sym(12))))
TP(Sym(7),DefineFun(Block(Sym(94))))
TP(Sym(95),Lambda(<function1>))
TP(Sym(96),Apply(Sym(7),Sym(5)))
TP(Sym(97),Apply(Sym(22),Sym(5)))
TP(Sym(98),Apply(Sym(68),Sym(5)))
TP(Sym(99),OrElse(List(Sym(96), Sym(97), Sym(98))))
TP(Sym(100),Reify(Sym(99),List(Sym(3), Sym(6))))
TP(Sym(1),DefineFun(Block(Sym(100))))
TP(Sym(101),Lambda(<function1>))
TP(Sym(102),Apply(Sym(1),Sym(0)))
TP(Sym(103),Apply(Sym(22),Sym(0)))
TP(Sym(104),Apply(Sym(68),Sym(0)))
TP(Sym(105),OrElse(List(Sym(102), Sym(103), Sym(104))))
Sym(105)
